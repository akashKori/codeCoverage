import React, {Component} from 'react';
import { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';

class Attachment extends Component{
     constructor(props) {
        super(props);
        this.state = {
            fixedHeader: true,
            fixedFooter: true,
            stripedRows: false,
            showRowHover: true,
            selectable: true,
            multiSelectable: false,
            enableSelectAll: false,
            deselectOnClickaway: true,
            showCheckboxes: false,
           
           
        };
    }
   renderList() {
        return this.props.attachement.map((att) => {
           return (
                 <div> 
                 
<Table>
    <TableHeader displaySelectAll={this.state.showCheckboxes} adjustForCheckbox={this.state.showCheckboxes} enableSelectAll={this.state.enableSelectAll}>
      <TableRow>
         <TableHeaderColumn>Name </TableHeaderColumn>
         <TableHeaderColumn>Type</TableHeaderColumn>
         <TableHeaderColumn>Description</TableHeaderColumn>
         <TableHeaderColumn>Created By</TableHeaderColumn>
         <TableHeaderColumn>Created On</TableHeaderColumn>
         <TableHeaderColumn>Open Attachment</TableHeaderColumn>
      </TableRow>
    </TableHeader>
    <TableBody displayRowCheckbox={this.state.showCheckboxes}
            deselectOnClickaway={this.state.deselectOnClickaway}
            showRowHover={this.state.showRowHover}
            stripedRows={this.state.stripedRows}>
    <TableRow>
          <TableRowColumn>{att.Name}</TableRowColumn>
          <TableRowColumn>{att.Type}</TableRowColumn>
          <TableRowColumn>{att.Description}</TableRowColumn>
          <TableRowColumn></TableRowColumn>
          <TableRowColumn></TableRowColumn>
          <TableRowColumn>{att.OpenAttachmnet}</TableRowColumn>
          
    </TableRow>
    </TableBody>
    </Table>
                 
                 
                 </div>

            );
        });
    }
     render() {
        return (
            <ul>
                {this.renderList()}
            </ul>
        );
    }

}
// Get apps state and pass it as props to UserList
// > whenever state changes, the UserList will automatically re-render
function mapStateToProps(allReducers) {
    return {attachement: allReducers.req.attachement};
}


export default connect(mapStateToProps)(Attachment);